
    <div class="content">
        <div id="text-section" class="text-section">
            <ul id="card-target" class="card-container"> <!-- 메세지 컨테이너 -->
              <!--메세지  내용-->
                <li class="card" id="card-anchor">MusicKitchen</li></ul>
        </div>
        <!-- <input id="href"> <button onclick="generate()">Generate</button> -->
        <div class="audio-section">
            <div id="video-placeholder"></div>
            <div class="player-container">
                <div id="controls">
                    <div class="up-section">
                        <div class="title-section">
                            <span id="play-music-name">Music Kitchen - 준비중입니다.</span> <!--현재 플레이 중인 음악-->
                        </div>
                        <div class="progress-section">
                            <div class="progress-part"><input type="range" id="progress-bar" value="0"></div>
                            <div class="time-part">
                                <div id="current-time">0:00</div>
                                <div id="duration">0:00 </div>
                            </div>
                        </div>
                        <div class="play-section">
                            <i id="prev" class="material-icons">fast_rewind</i>
                            <i id="play-toggle" class="material-icons">play_arrow</i>
                            <i id="next" class="material-icons">fast_forward</i>
                        </div>
                    </div>
                    <div class="volume-section">
                        <i id="mute-toggle" class="material-icons">volume_up</i>
                        <input type="range" id="volume-input" value="0">
                    </div>
                </div>
                <div id="music-title"> <!--노래 리스트-->
                    <div class="title-container" id="present-video" style="font-weight: bold;"><!--노래 제목-->
                      Music Kitchen - 준비중입니다.
                    </div>
                    <div class="title-container init" id="next-video"><!--노래 제목-->
                      <span class="blank-music">노래를 신청해주세요.</span>
                    </div>
                    <div class="title-container" id="next-next-video"><!--노래 제목-->
                      <span class="blank-music">노래를 신청해주세요.</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://www.youtube.com/iframe_api"></script>

    <script type="text/javascript">
      var first = "7PrxONon7jg"
      var playlist = <%= raw @vids %>
      var playlist_json = <%= raw @playlists %>
      var previousIndex = 0
      /*유튜브 플레이어 정의*/
      var player,time_update_interval = 0;

      function onYouTubeIframeAPIReady() {
          player = new YT.Player('video-placeholder', {
              width: 600,
              height: 400,
              videoId: first,
              playerVars: {
                  color: 'white',
                  autoplay: 1,
                  playlist: setFirst(playlist),
              },
              events: {
                  onReady: initialize,
                  onStateChange: stateChange
              }
          });
      }

      function setFirst(playlist) {
        old_playlist = playlist
        playlist.splice(0,0,first)
        playlist_json.splice(0,0,first)
        return old_playlist.join(',')
      }

      /* 유튜브 컨트롤러 정의*/
      function initialize(){
          updateTimerDisplay();
          updateProgressBar();
          clearInterval(time_update_interval);
          time_update_interval = setInterval(function () {
              updateTimerDisplay();
              updateProgressBar();
          }, 1000);
          $('#volume-input').val(Math.round(player.getVolume()));
      }

      // 수노의 개꿀딱 코드 복사
      function stateChange(event){
        console.log("[stateChange] event.data : " + event.data)
        if(event.data == -1) {
            console.log("change")
            // get current video index
            var index = player.getPlaylistIndex();
            // update when playlists do not match
            if(player.getPlaylist().length != playlist.length) {
              // update playlist and start playing at the proper index
              player.loadPlaylist(playlist, previousIndex+1);
            }
            previousIndex = index;
        }else if(event.data == 1){
          // debugger
          title = event.target.j.videoData.title
          changeName(title);
          changeList(previousIndex, title);
          console.log("[노래 시작] 노래제목 : " + title);
        }
      }

      function updateTimerDisplay(){
          $('#current-time').text(formatTime( player.getCurrentTime() ));
          $('#duration').text(formatTime( player.getDuration() ));
      }

      function updateProgressBar(){
          $('#progress-bar').val((player.getCurrentTime() / player.getDuration()) * 100);
      }


      // Progress bar
      $('#progress-bar').on('mouseup touchend', function (e) {
          var newTime = player.getDuration() * (e.target.value / 100);
          player.seekTo(newTime);

      });

      // Playback
      $('#play-toggle').on('click', function () {
          var play_toggle = $(this);
          if(player.getPlayerState() != 1) {
              player.playVideo();
              play_toggle.text('pause');
          }
          else{
              player.pauseVideo();
              play_toggle.text('play_arrow');
          }
      });

      // Sound volume
      $('#mute-toggle').on('click', function() {
          var mute_toggle = $(this);
          if(player.isMuted()){
              player.unMute();
              mute_toggle.text('volume_up');
          }
          else{
              player.mute();
              mute_toggle.text('volume_off');
          }
      });
      $('#volume-input').on('change', function () {
          player.setVolume($(this).val());
      });

      // Playlist
      $('#next').on('click', function () {
          player.nextVideo()
      });
      $('#prev').on('click', function () {
          player.previousVideo()
      });

      // Time Helper Functions
      function formatTime(time){
          time = Math.round(time);
          var minutes = Math.floor(time / 60),
              seconds = time - minutes * 60;
          seconds = seconds < 10 ? '0' + seconds : seconds;
          return minutes + ":" + seconds;
      }

      /* 텍스트 메세지 생성자*/
      function generate(valueOfTest) {
          var parentTarget = document.getElementById('card-target');
          parentTarget.lastChild.removeAttribute("id");
          var a = document.createElement('li');
          // var valueOfTest = document.getElementById('href').value; /*현재 테스트용 텍스트 입력을 받으면 여기서 벨류 받아와서 들어감 여기로 메세지 넣으면 될듯*/
          a.appendChild(document.createTextNode(valueOfTest));
          // a.append(valueOfTest);
          a.classList.add('card');
          a.setAttribute("id", "card-anchor");
          parentTarget.appendChild(a);
          // element 삭제
          if(parentTarget.childElementCount > 10){
            console.log("[generate] 텍스트 삭제")
            parentTarget.firstElementChild.remove();
          }

          (function () {
              var anchor = document.getElementById("card-anchor");
              var topPosition = anchor.offsetTop;
              document.getElementById('card-target').scrollTop = topPosition;
          }());
      }

      function generate_img(src) {
        var parentTarget = document.getElementById('card-target');
        parentTarget.lastChild.removeAttribute("id");
        var a = document.createElement('li');
        var oImg = document.createElement("img");
        oImg.setAttribute('src', src);
        oImg.setAttribute('alt', 'na');
        oImg.setAttribute('height', '200px')
        // var valueOfTest = document.getElementById('href').value; /*현재 테스트용 텍스트 입력을 받으면 여기서 벨류 받아와서 들어감 여기로 메세지 넣으면 될듯*/
        a.appendChild(oImg);
        a.classList.add('card');
        a.setAttribute("id", "card-anchor");
        parentTarget.appendChild(a);
        // element 삭제
        if(parentTarget.childElementCount > 10){
          console.log("[generate] 텍스트 삭제")
          parentTarget.firstElementChild.remove();
        }

        (function () {
            var anchor = document.getElementById("card-anchor");
            var topPosition = anchor.offsetTop;
            document.getElementById('card-target').scrollTop = topPosition;
        }());
      }



      function music_inserted(data) {
        playlist.push(data.vid);
        playlist_json.push(data);
        if ($(".init").length != 0){
          class_name = $(".init").children("div").prevObject.attr("id")
          $(".init").text(data.title)
          if (class_name=="next-video"){
            $(".title-container").removeClass("init")
            $("#next-next-video").addClass("init")
          }else if (class_name=="next-next-video"){
            $(".title-container").removeClass("init")
          }
        }else{
          $(".title-container").removeClass("init")
        }

      }

      function music_deleted(index) {
        playlist.splice(index,1);
        playlist_json.splice(index,1);

      }

      // 우선 예약 코드
      function super_booking(data) {
        playlist.splice(previousIndex + 1, 0 ,data.vid)
        playlist_json.splice(previousIndex + 1, 0 ,data)
        n = previousIndex
        var max_index = playlist_json.length + n - 1
        if(max_index - n == 1){
          $("#next-video").text(playlist_json[n+1].title)
          $("#next-next-video").empty();
          $("#next-next-video").addClass("init")
          $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
        }else if(max_index - n == 0){
          $("#next-video").empty();
          $("#next-video").addClass("init");
          $("#next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          $("#next-next-video").empty();
          $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
        }else if(max_index -n > 1){
          $("#next-video").text(playlist_json[n+1].title)
          $("#next-next-video").text(playlist_json[n+2].title)
        }

        if ($(".init").length != 0){
          class_name = $(".init").children("div").prevObject.attr("id")
          // $(".init").text(data.title)
          if (class_name=="next-video"){
            $(".title-container").removeClass("init")
            $("#next-next-video").addClass("init")
          }else if (class_name=="next-next-video"){
            $(".title-container").removeClass("init")
          }
        }else{
          $(".title-container").removeClass("init")
        }

      }

      // 현재 재생중인 음악
      function changeName(name){
        $("#play-music-name").text(name)
      }

      // 목록 잡기
      function changeList(n,title){
        console.log("[changeList] previousIndex : " + n)
        console.log("[changeList] playlist_json.length : " + playlist_json.length)
        $(".title-container").removeClass("init")
        var max_index = playlist_json.length + n - 1
        if(n == 0){
          $("#present-video").text(title)
          if(max_index - n == 1){
            $("#next-video").text(playlist_json[n+1].title)
            $("#next-next-video").empty();
            $("#next-next-video").addClass("init")
            $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          }else if(max_index - n == 0){
            $("#next-video").empty();
            $("#next-video").addClass("init");
            $("#next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
            $("#next-next-video").empty();
            $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          }else if(max_index -n > 1){
            $("#next-video").text(playlist_json[n+1].title)
            $("#next-next-video").text(playlist_json[n+2].title)
          }
        }else if(n == playlist_json.length - 1){
          $("#present-video").text(playlist_json[n].title)
          $("#next-video").empty();
          $("#next-video").addClass("init");
          $("#next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          $("#next-next-video").empty();
          $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
        }else if(n == playlist_json.length - 2){
          $("#present-video").text(playlist_json[n].title)
          $("#next-video").text(playlist_json[n+1].title)
          $("#next-next-video").empty();
          $("#next-next-video").addClass("init")
          $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
        }else{
          $("#present-video").text(playlist_json[n].title)
          if(max_index - n == 1){
            $("#next-video").text(playlist_json[n+1].title)
            $("#next-next-video").empty();
            $("#next-next-video").addClass("init")
            $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          }else if(max_index - n == 0){
            $("#next-video").empty();
            $("#next-video").addClass("init");
            $("#next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
            $("#next-next-video").empty();
            $("#next-next-video").append(`<span class="blank-music">노래를 신청해주세요.</span>`)
          }else if(max_index -n > 1){
            $("#next-video").text(playlist_json[n+1].title)
            $("#next-next-video").text(playlist_json[n+2].title)
          }
        }
      }

      function developer() {
        var dev_ary = ["강원대의 서현석!","이화여대의 엄서영!!","동국대의 노종원!!!","아주대의 장순호!!!!","뮤직키친 개발자들입니다!!"]
        i = 0
        var start = setInterval(function() {
          generate(dev_ary[i])
          i++;
          if(i == 5){
            clearInterval(start)
          }
        }, 3000);
      }

      function doohee(){
        var doohee_ary = [
          'http://mblogthumb3.phinf.naver.net/20140113_46/run247_13896030768938VR3y_PNG/2014-01-13_17%3B49%3B55.PNG?type=w2',
          'https://t1.daumcdn.net/cfile/tistory/217F123952BE61A223',
          'http://img.etoday.co.kr/pto_db/2014/01/20140112030354_394030_450_482.jpg',
          'https://upload.wikimedia.org/wikipedia/commons/1/14/2013%EB%85%84_%EB%8C%80%ED%95%9C%EB%AF%BC%EA%B5%AD_%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%A8%B8%EC%9D%B4%EC%9E%90_%EB%A9%8B%EC%9F%81%EC%9D%B4%EC%82%AC%EC%9E%90%EC%B2%98%EB%9F%BC_%EC%84%A4%EB%A6%BD%EC%9E%90_%EC%9D%B4%EB%91%90%ED%9D%AC%EA%B0%80_%ED%95%B4%EB%B3%80%EA%B0%80%EC%97%90%EC%84%9C_%EC%9B%83%EB%8A%94_%EB%AA%A8%EC%8A%B5.png',
          'https://t1.daumcdn.net/cfile/tistory/21238243580359C521',
          'https://t1.daumcdn.net/cfile/tistory/226BCF3D5696F11903',
          'http://img.hankyung.com/photo/201610/AA.12682963.1.jpg',
          'http://img.hankyung.com/photo/201401/01.8245004.1.jpg',
          'http://img.yonhapnews.co.kr/photo/yna/YH/2016/09/21/PYH2016092109350001300_P2.jpg',
          'http://images.jkn.co.kr/data/images/full/897031/2015-04-06-11-04-49-png.png?w=600',
          'http://cdnweb01.wikitree.co.kr/webdata/editor/201401/13/img_20140113161828_09a2b01b.gif',
          'http://image.chosun.com/sitedata/image/201701/20/2017012001355_0.jpg',
          'http://img.sbs.co.kr/newsnet/etv/upload/2014/01/12/30000348136_700.jpg',
          'http://www.mediaus.co.kr/news/photo/201312/39002_87362_76.gif',
          'http://mblogthumb1.phinf.naver.net/MjAxNjEyMjhfMjM0/MDAxNDgyOTExMjMyMDUy.o6qNXflczaxhzFmmqAI0O4SzcChNcqUqNwTU0THnZNMg.FKN9Ru5fNyhk1xxQEXz6cW3vYfxib2LWrW-h6j_TiO8g.JPEG.ym_sh/NaverBlog_20161228_164711_08.jpg?type=w2',
          'https://scontent-icn1-1.cdninstagram.com/vp/8aa6fe53c6502335271d1d922336b8bf/5C14BAAD/t51.2885-15/e35/36813417_280558455838115_8585172675859578880_n.jpg',
          'https://scontent-icn1-1.cdninstagram.com/vp/143cf531375071aec1a0db3568023401/5BF91570/t51.2885-15/e35/26224266_1458112550981470_351027840310837248_n.jpg'
        ]
        var rand = doohee_ary[Math.floor(Math.random() * doohee_ary.length)];

        generate_img(rand);
      }


      var channel = pusher.subscribe('mychannel');
      channel.bind('create', function(data) {
        if(data.code == 0){
          console.log("[channel] 뮤직 추가!")
          if (data.result.status == 0){
            console.log("[channel::Music] 일반예약");
            music_inserted(data.result);
          }else if (data.result.status == 1){
            console.log("[channel::Music] 우선예약")
            super_booking(data.result);
          }
        }else if(data.code == 1){
          console.log("[channel] 메세지 추가!")
          if(data.result.body=="개발자"){
            developer()
          }else if(data.result.body == "이두희"){
            doohee();
          }else{
            generate(data.result.body);
          }

        }else if(data.code == 2){
          if(data.result == "previous"){
            console.log("[channel] 리모콘 작동! : 이전 곡")
            player.previousVideo()
          }else if (data.result == "next"){
            console.log("[channel] 리모콘 작동! : 다음 곡")
            player.nextVideo()
          }else if (data.result == "play"){
            console.log("[channel] 리모콘 작동! : 재생")
            player.playVideo();
            $('#play-toggle').text("pause");
          }else if (data.result == "stop"){
            console.log("[channel] 리모콘 작동! : 중지")
            player.pauseVideo();
            $('#play-toggle').text("play_arrow");
          }
        }else if(data.code == 3){
          console.log("[channel] 리모콘 작동! : ["+ data.result.title + "]삭제")
          music_deleted(data.index)
          changeList(previousIndex,$("#present-video").text())
        }
      });

    </script>

    <!-- <script src="main.js"></script> -->
